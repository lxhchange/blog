(self.webpackChunkblog=self.webpackChunkblog||[]).push([[834],{332:(e,t,a)=>{"use strict";a.r(t),a.d(t,{data:()=>i});const i={key:"v-38d7d0a4",path:"/frontend.html",title:"重学前端",lang:"zh-CN",frontmatter:{title:"重学前端",description:"重学前端"},excerpt:"",headers:[{level:2,title:"重学前端",slug:"重学前端",children:[{level:3,title:"javascript语言",slug:"javascript语言",children:[]}]}],filePathRelative:"frontend.md",git:{updatedTime:1627984254e3,contributors:[]}}},770:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>r});const i=(0,a(252).uE)('<h2 id="重学前端" tabindex="-1"><a class="header-anchor" href="#重学前端" aria-hidden="true">#</a> 重学前端</h2><p>从事前端工作五年，最近几次受挫，想着反思下自己对前端的理解，重新学习、认识整个js语言，准备按如下列表整理知识点</p><h3 id="javascript语言" tabindex="-1"><a class="header-anchor" href="#javascript语言" aria-hidden="true">#</a> javascript语言</h3><ul><li>[ ] let, const, var的区别</li><li>[ ] block scoping 和 function scoping 的含义、区别</li><li>[ ] asyc, await, promise, generator 的异步写法的迭代以及深层次的理解</li><li>[ ] iterator 迭代器的规范、理解</li><li>[ ] event loop 事件循环、理解</li></ul>',4),r={render:function(e,t){return i}}}}]);